"""{ "instructions": "Remove non prime numbers from data then right shift 
[228th decimal of the constant quantity that determines the area of a circle by multiplying it by 
the radius squared] bits from the remaining numbers, it will give you the alphanumeric password of 
the next level", "numbers": 
[ 3435, 45355, 62842, 14461, 33497, 42365, 13763, 268, 10018, 19138, 12491, 33095, 32756, 23832, 51089, 
45782, 13633, 25742, 63148, 8507, 29767, 6350, 23064, 15080, 45348, 13532, 35032, 63947, 13331, 41239, 23485,
48890, 13314, 25367, 49318, 5637, 13337, 24953, 63886, 12295, 3423, 25471, 37775, 42163, 20668, 43302, 22208,
22805, 41886, 12986, 14011, 32384, 24920, 40045, 40313, 25153, 56382, 26083, 25741, 12611, 14293, 12647,
 17340, 24031, 63715, 39530, 11024, 18018, 14629, 3885, 17163, 8883, 36074, 36855, 12189, 22237, 17980, 
 27590, 13309, 40845, 61612, 24989, 63918, 62979, 47053, 44191, 51274, 25463, 34534, 18982, 52912, 7020, 
 26230, 28089, 41895, 28158, 28284, 14669, 43756, 63182, 17057, 22615, 6488, 38016, 17091, 53131, 24851, 
 46984, 14173, 63529, 25391, 16337, 38064, 47613, 12511, 42783, 39296, 15221, 33800, 26334, 11921, 46408, 
 12799, 50392, 13219, 52282, 2296, 25229, 29272, 13297, 13597, 10065, 37230, 25343, 13127, 12821, 1604, 
 6033, 12246, 15104, 18346, 18985, 14369, 3346, 26261, 8736, 21324, 18407, 22456, 30991, 52864, 16546,
  2545, 25253, 65483, 1529, 24919, 44001, 1214, 55803, 25733, 14503, 39210, 64255, 13229 ] }"""

def is_prime(n):
    if n < 2:
        return False
    for i in range(2, int(n ** 0.5) + 1):
        if n % i == 0:
            return False
    return True

def remove_non_primes(arr):
    i = 0
    while i < len(arr):
        if not is_prime(arr[i]):
            arr.pop(i)
        else:
            i += 1
    return arr

# Example usage
arr = [3435, 45355, 62842, 14461, 33497, 42365, 13763, 268, 10018, 19138, 12491, 33095, 32756, 23832, 51089,45782, 13633, 25742, 63148, 8507, 29767, 6350, 23064, 15080, 45348, 13532, 35032, 63947, 13331, 41239, 23485,48890, 13314, 25367, 49318, 5637, 13337, 24953, 63886, 12295, 3423, 25471, 37775, 42163, 20668, 43302, 22208,22805, 41886, 12986, 14011, 32384, 24920, 40045, 40313, 25153, 56382, 26083, 25741, 12611, 14293, 12647, 17340, 24031, 63715, 39530, 11024, 18018, 14629, 3885, 17163, 8883, 36074, 36855, 12189, 22237, 17980, 27590, 13309, 40845, 61612, 24989, 63918, 62979, 47053, 44191, 51274, 25463, 34534, 18982, 52912, 7020, 26230, 28089, 41895, 28158, 28284, 14669, 43756, 63182, 17057, 22615, 6488, 38016, 17091, 53131, 24851, 46984, 14173, 63529, 25391, 16337, 38064, 47613, 12511, 42783, 39296, 15221, 33800, 26334, 11921, 46408,12799, 50392, 13219, 52282, 2296, 25229, 29272, 13297, 13597, 10065, 37230, 25343, 13127, 12821, 1604, 6033, 12246, 15104, 18346, 18985, 14369, 3346, 26261, 8736, 21324, 18407, 22456, 30991, 52864, 16546,  2545, 25253, 65483, 1529, 24919, 44001, 1214, 55803, 25733, 14503, 39210, 64255, 13229]
print(remove_non_primes(arr))  # Output: [2, 3, 5, 7]


""" [14461, 13763, 12491, 13633, 13331, 25367, 13337, 24953, 25471, 14011, 25153, 26083, 25741, 12611, 
14293, 12647, 14629, 13309, 24989, 25463, 14669, 24851, 14173, 25391, 12511, 12799, 13219, 25229, 13297, 
13597, 25343, 13127, 12821, 14369, 26261, 25253, 24919, 25733, 14503, 13229] """

def shift_bits(arr, bits):
	i = 0
	while i < len(arr):
		arr[i] = arr[i]>>bits
		i+=1
	return arr

ascii_codes = shift_bits(arr,8)

print(ascii_codes)

result = ""
for code in ascii_codes:
    result += chr(code)

print(result)